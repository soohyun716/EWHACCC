{"ast":null,"code":"var _jsxFileName = \"/Users/josuhyeon/EWHACCC/src/components/SwipeNavigator/SwipeNavigator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Routes, Route } from 'react-router-dom';\nimport Mainpage from '../../pages/Mainpage/Mainpage';\nimport Human from '../../pages/Letterpage/Human';\nimport Social from '../../pages/Letterpage/Social';\nimport Nature from '../../pages/Letterpage/Nature';\n\n// 다른 페이지도 필요에 따라 임포트하세요\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SwipeNavigator() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation(); // Get the current location\n  const [startX, setStartX] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n\n  // 터치 시작 이벤트 핸들러\n  const handleTouchStart = e => {\n    setStartX(e.touches[0].clientX);\n    setIsDragging(true);\n  };\n\n  // 터치 이동 이벤트 핸들러\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    const currentX = e.touches[0].clientX;\n    const diffX = startX - currentX;\n\n    // 스와이프 거리가 일정 기준 이상일 때 페이지 전환\n    if (diffX > 50) {\n      // 왼쪽으로 스와이프 (다음 페이지)\n      if (location.pathname === '/') {\n        navigate('/human');\n      } else if (location.pathname === '/human') {\n        navigate('/social');\n      } else if (location.pathname === '/social') {\n        navigate('/nature');\n      }\n      setIsDragging(false);\n    } else if (diffX < -50) {\n      // 오른쪽으로 스와이프 (이전 페이지)\n      if (location.pathname === '/nature') {\n        navigate('/social');\n      } else if (location.pathname === '/social') {\n        navigate('/human');\n      } else if (location.pathname === '/human') {\n        navigate('/');\n      }\n      setIsDragging(false);\n    }\n  };\n\n  // 터치 끝 이벤트 핸들러\n  const handleTouchEnd = () => {\n    setIsDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"swipe-container\",\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Mainpage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/human\",\n        element: /*#__PURE__*/_jsxDEV(Human, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/social\",\n        element: /*#__PURE__*/_jsxDEV(Social, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/nature\",\n        element: /*#__PURE__*/_jsxDEV(Nature, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(SwipeNavigator, \"KmEAgR+1jOSIVHWIJJDCEQyVZkU=\", true, function () {\n  return [useNavigate];\n});\n_c = SwipeNavigator;\nexport default SwipeNavigator;\nvar _c;\n$RefreshReg$(_c, \"SwipeNavigator\");","map":{"version":3,"names":["React","useState","useNavigate","Routes","Route","Mainpage","Human","Social","Nature","jsxDEV","_jsxDEV","SwipeNavigator","_s","navigate","location","useLocation","startX","setStartX","isDragging","setIsDragging","handleTouchStart","e","touches","clientX","handleTouchMove","currentX","diffX","pathname","handleTouchEnd","className","onTouchStart","onTouchMove","onTouchEnd","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/josuhyeon/EWHACCC/src/components/SwipeNavigator/SwipeNavigator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Routes, Route } from 'react-router-dom';\nimport Mainpage from '../../pages/Mainpage/Mainpage';\nimport Human from '../../pages/Letterpage/Human';\nimport Social from '../../pages/Letterpage/Social';\nimport Nature from '../../pages/Letterpage/Nature';\n\n// 다른 페이지도 필요에 따라 임포트하세요\n\nfunction SwipeNavigator() {\n    const navigate = useNavigate();\n    const location = useLocation(); // Get the current location\n    const [startX, setStartX] = useState(0);\n    const [isDragging, setIsDragging] = useState(false);\n\n    // 터치 시작 이벤트 핸들러\n    const handleTouchStart = (e) => {\n        setStartX(e.touches[0].clientX);\n        setIsDragging(true);\n    };\n\n    // 터치 이동 이벤트 핸들러\n    const handleTouchMove = (e) => {\n        if (!isDragging) return;\n        const currentX = e.touches[0].clientX;\n        const diffX = startX - currentX;\n\n        // 스와이프 거리가 일정 기준 이상일 때 페이지 전환\n        if (diffX > 50) { // 왼쪽으로 스와이프 (다음 페이지)\n            if (location.pathname === '/') {\n                navigate('/human');\n            } else if (location.pathname === '/human') {\n                navigate('/social');\n            } else if (location.pathname === '/social') {\n                navigate('/nature');\n            }\n            setIsDragging(false);\n        } else if (diffX < -50) { // 오른쪽으로 스와이프 (이전 페이지)\n            if (location.pathname === '/nature') {\n                navigate('/social');\n            } else if (location.pathname === '/social') {\n                navigate('/human');\n            } else if (location.pathname === '/human') {\n                navigate('/');\n            }\n            setIsDragging(false);\n        }\n    };\n\n    // 터치 끝 이벤트 핸들러\n    const handleTouchEnd = () => {\n        setIsDragging(false);\n    };\n\n    return (\n        <div\n            className=\"swipe-container\"\n            onTouchStart={handleTouchStart}\n            onTouchMove={handleTouchMove}\n            onTouchEnd={handleTouchEnd}\n        >\n            <Routes>\n                <Route path=\"/\" element={<Mainpage />} />\n                <Route path=\"/human\" element={<Human />} />\n                <Route path=\"/social\" element={<Social />} />\n                <Route path=\"/nature\" element={<Nature />} />\n                {/* 다른 페이지 라우팅을 추가하세요 */}\n            </Routes>\n        </div>\n    );\n}\n\nexport default SwipeNavigator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
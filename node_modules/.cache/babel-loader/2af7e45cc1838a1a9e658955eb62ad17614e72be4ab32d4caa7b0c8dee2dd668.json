{"ast":null,"code":"var _jsxFileName = \"/Users/josuhyeon/EWHACCC/src/components/SwipeNavigator/SwipeNavigator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Routes, Route } from 'react-router-dom';\nimport Mainpage from '../../pages/Mainpage/Mainpage';\nimport Human from '../../pages/Letterpage/Human';\n// 다른 페이지도 필요에 따라 임포트하세요\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SwipeNavigator() {\n  _s();\n  const navigate = useNavigate();\n  const [startX, setStartX] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n\n  // 터치 시작 이벤트 핸들러\n  const handleTouchStart = e => {\n    setStartX(e.touches[0].clientX);\n    setIsDragging(true);\n  };\n\n  // 터치 이동 이벤트 핸들러\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    const currentX = e.touches[0].clientX;\n    const diffX = startX - currentX;\n\n    // 스와이프 거리가 일정 기준 이상일 때 페이지 전환\n    if (diffX > 50) {\n      // 왼쪽으로 스와이프 (다음 페이지)\n      navigate('/human'); // 원하는 경로로 이동 (예: '/human')\n      setIsDragging(false);\n    } else if (diffX < -50) {\n      // 오른쪽으로 스와이프 (이전 페이지)\n      navigate('/'); // 원하는 경로로 이동 (예: '/')\n      setIsDragging(false);\n    }\n  };\n\n  // 터치 끝 이벤트 핸들러\n  const handleTouchEnd = () => {\n    setIsDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"swipe-container\",\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Mainpage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/human\",\n        element: /*#__PURE__*/_jsxDEV(Human, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(SwipeNavigator, \"KAMYdB0F8UZFG/z1V7k1cDj2bec=\", false, function () {\n  return [useNavigate];\n});\n_c = SwipeNavigator;\nexport default SwipeNavigator;\nvar _c;\n$RefreshReg$(_c, \"SwipeNavigator\");","map":{"version":3,"names":["React","useState","useNavigate","Routes","Route","Mainpage","Human","jsxDEV","_jsxDEV","SwipeNavigator","_s","navigate","startX","setStartX","isDragging","setIsDragging","handleTouchStart","e","touches","clientX","handleTouchMove","currentX","diffX","handleTouchEnd","className","onTouchStart","onTouchMove","onTouchEnd","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/josuhyeon/EWHACCC/src/components/SwipeNavigator/SwipeNavigator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Routes, Route } from 'react-router-dom';\nimport Mainpage from '../../pages/Mainpage/Mainpage';\nimport Human from '../../pages/Letterpage/Human';\n// 다른 페이지도 필요에 따라 임포트하세요\n\nfunction SwipeNavigator() {\n  const navigate = useNavigate();\n  const [startX, setStartX] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n\n  // 터치 시작 이벤트 핸들러\n  const handleTouchStart = (e) => {\n    setStartX(e.touches[0].clientX);\n    setIsDragging(true);\n  };\n\n  // 터치 이동 이벤트 핸들러\n  const handleTouchMove = (e) => {\n    if (!isDragging) return;\n    const currentX = e.touches[0].clientX;\n    const diffX = startX - currentX;\n\n    // 스와이프 거리가 일정 기준 이상일 때 페이지 전환\n    if (diffX > 50) { // 왼쪽으로 스와이프 (다음 페이지)\n      navigate('/human'); // 원하는 경로로 이동 (예: '/human')\n      setIsDragging(false);\n    } else if (diffX < -50) { // 오른쪽으로 스와이프 (이전 페이지)\n      navigate('/'); // 원하는 경로로 이동 (예: '/')\n      setIsDragging(false);\n    }\n  };\n\n  // 터치 끝 이벤트 핸들러\n  const handleTouchEnd = () => {\n    setIsDragging(false);\n  };\n\n  return (\n    <div\n      className=\"swipe-container\"\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      <Routes>\n        <Route path=\"/\" element={<Mainpage />} />\n        <Route path=\"/human\" element={<Human />} />\n        {/* 다른 페이지 라우팅을 추가하세요 */}\n      </Routes>\n    </div>\n  );\n}\n\nexport default SwipeNavigator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC7D,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,KAAK,MAAM,8BAA8B;AAChD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMe,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,SAAS,CAACI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;IAC/BJ,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMK,eAAe,GAAIH,CAAC,IAAK;IAC7B,IAAI,CAACH,UAAU,EAAE;IACjB,MAAMO,QAAQ,GAAGJ,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;IACrC,MAAMG,KAAK,GAAGV,MAAM,GAAGS,QAAQ;;IAE/B;IACA,IAAIC,KAAK,GAAG,EAAE,EAAE;MAAE;MAChBX,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACpBI,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM,IAAIO,KAAK,GAAG,CAAC,EAAE,EAAE;MAAE;MACxBX,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACfI,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3BR,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEP,OAAA;IACEgB,SAAS,EAAC,iBAAiB;IAC3BC,YAAY,EAAET,gBAAiB;IAC/BU,WAAW,EAAEN,eAAgB;IAC7BO,UAAU,EAAEJ,cAAe;IAAAK,QAAA,eAE3BpB,OAAA,CAACL,MAAM;MAAAyB,QAAA,gBACLpB,OAAA,CAACJ,KAAK;QAACyB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEtB,OAAA,CAACH,QAAQ;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzC1B,OAAA,CAACJ,KAAK;QAACyB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEtB,OAAA,CAACF,KAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxB,EAAA,CA9CQD,cAAc;EAAA,QACJP,WAAW;AAAA;AAAAiC,EAAA,GADrB1B,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
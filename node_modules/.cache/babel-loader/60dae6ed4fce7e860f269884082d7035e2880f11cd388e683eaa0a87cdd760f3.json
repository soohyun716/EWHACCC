{"ast":null,"code":"var _jsxFileName = \"/Users/josuhyeon/ewhaccc/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, Suspense } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Mainpage from './Mainpage';\nimport Footer from './Footer';\n\n// Reacr.lazy를 사용하여 FullscreenMenu를 지연로드\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullscreenMenu = /*#__PURE__*/React.lazy(_c = () => import('./FullscreenMenu'));\n_c2 = FullscreenMenu;\nfunction App() {\n  _s();\n  // 상태 관리: 메뉴 표시 여부와 버튼 숨김 여부\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n\n  // 토글 버튼 누르면 메뉴 보이기\n  const openMenu = () => {\n    setIsMenuVisible(true);\n  };\n\n  //메뉴 닫기 \n  const closeMenu = () => {\n    setIsMenuVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onMenuClick: openMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mainpage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isMenuVisible && /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(FullscreenMenu, {\n        onClose: closeMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hLLUFUIN9gsDnq/B96yhk96pk7M=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FullscreenMenu$React.lazy\");\n$RefreshReg$(_c2, \"FullscreenMenu\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Suspense","Navbar","Mainpage","Footer","jsxDEV","_jsxDEV","FullscreenMenu","lazy","_c","_c2","App","_s","isMenuVisible","setIsMenuVisible","openMenu","closeMenu","className","children","onMenuClick","fileName","_jsxFileName","lineNumber","columnNumber","fallback","onClose","_c3","$RefreshReg$"],"sources":["/Users/josuhyeon/ewhaccc/src/App.js"],"sourcesContent":["import React, { useState, Suspense } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Mainpage from './Mainpage';\nimport Footer from './Footer';\n\n// Reacr.lazy를 사용하여 FullscreenMenu를 지연로드\nconst FullscreenMenu = React.lazy(() => import('./FullscreenMenu'));\n\nfunction App() {\n  // 상태 관리: 메뉴 표시 여부와 버튼 숨김 여부\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n\n  // 토글 버튼 누르면 메뉴 보이기\n  const openMenu = () => {\n    setIsMenuVisible(true);\n  };\n\n  //메뉴 닫기 \n  const closeMenu = () => {\n    setIsMenuVisible(false);\n  };\n\n  return (\n    <div className=\"app\">\n      {/* 네비게이션 바 */}\n      <Navbar onMenuClick={openMenu} />\n\n      {/* 메인 페이지 */}\n      <Mainpage />\n\n      {/* 풀스크린 메뉴: Suspense로 감싸서 로딩 중 상태처리 */}\n      {isMenuVisible && (\n        <Suspense fallback={<div>Loading...</div>}>\n         <FullscreenMenu onClose={closeMenu} />\n        </Suspense>\n      )}\n\n      {/* footer: 인스타 주소 */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,gBAAGR,KAAK,CAACS,IAAI,CAAAC,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAACC,GAAA,GAA9DH,cAAc;AAEpB,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAMe,QAAQ,GAAGA,CAAA,KAAM;IACrBD,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBF,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBZ,OAAA,CAACJ,MAAM;MAACiB,WAAW,EAAEJ;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGjCjB,OAAA,CAACH,QAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGXV,aAAa,iBACZP,OAAA,CAACL,QAAQ;MAACuB,QAAQ,eAAElB,OAAA;QAAAY,QAAA,EAAK;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE;MAAAL,QAAA,eACzCZ,OAAA,CAACC,cAAc;QAACkB,OAAO,EAAET;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACX,eAGDjB,OAAA,CAACF,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACX,EAAA,CAjCQD,GAAG;AAAAe,GAAA,GAAHf,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAF,EAAA,EAAAC,GAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}